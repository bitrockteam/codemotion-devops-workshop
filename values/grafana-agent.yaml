resources:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: grafana-agent
      namespace: monitoring
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: grafana-agent
    rules:
      - apiGroups:
          - ""
        resources:
          - nodes
          - nodes/proxy
          - nodes/metrics
          - services
          - endpoints
          - pods
          - events
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - list
          - watch
      - nonResourceURLs:
          - /metrics
          - /metrics/cadvisor
        verbs:
          - get
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: grafana-agent
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: grafana-agent
    subjects:
      - kind: ServiceAccount
        name: grafana-agent
        namespace: monitoring
  - apiVersion: monitoring.grafana.com/v1alpha1
    kind: GrafanaAgent
    metadata:
      name: grafana-agent
      namespace: monitoring
      labels:
        app: grafana-agent
    spec:
      image: grafana/agent:v0.39.2
      integrations:
        selector:
          matchLabels:
            agent: grafana-agent-integrations
      logLevel: info
      serviceAccountName: grafana-agent
      metrics:
        instanceSelector:
          matchLabels:
            agent: grafana-agent-metrics
        externalLabels:
          cluster: kind
      logs:
        instanceSelector:
          matchLabels:
            agent: grafana-agent-logs
  - apiVersion: monitoring.grafana.com/v1alpha1
    kind: MetricsInstance
    metadata:
      name: primary
      namespace: monitoring
      labels:
        agent: grafana-agent-metrics
    spec:
      remoteWrite:
        - url: http://lgtm-mimir-nginx:80/api/v1/push

      # Supply an empty namespace selector to look in all namespaces. Remove
      # this to only look in the same namespace as the MetricsInstance CR
      serviceMonitorNamespaceSelector: {}
      serviceMonitorSelector: {}

      # Supply an empty namespace selector to look in all namespaces. Remove
      # this to only look in the same namespace as the MetricsInstance CR.
      podMonitorNamespaceSelector: {}
      podMonitorSelector: {}

      # Supply an empty namespace selector to look in all namespaces. Remove
      # this to only look in the same namespace as the MetricsInstance CR.
      probeNamespaceSelector: {}
      probeSelector: {}

  - apiVersion: monitoring.grafana.com/v1alpha1
    kind: LogsInstance
    metadata:
      name: primary
      namespace: monitoring
      labels:
        agent: grafana-agent-logs
    spec:
      clients:
        - url: http://lgtm-loki-gateway:80/loki/api/v1/push

      # Supply an empty namespace selector to look in all namespaces. Remove
      # this to only look in the same namespace as the LogsInstance CR
      podLogsNamespaceSelector: {}
      podLogsSelector: {}

  - apiVersion: monitoring.grafana.com/v1alpha1
    kind: PodLogs
    metadata:
      labels:
        instance: primary
      name: kubernetes-pods
      namespace: monitoring
    spec:
      pipelineStages:
        - docker: {}
      namespaceSelector:
        any: true
      selector: {}
